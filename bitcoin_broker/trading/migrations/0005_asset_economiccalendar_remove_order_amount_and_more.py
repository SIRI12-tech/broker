# Generated by Django 5.1.3 on 2024-11-27 14:32

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('trading', '0004_auto_20241127_1425'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('asset_type', models.CharField(choices=[('crypto', 'Cryptocurrency'), ('stock', 'Stock'), ('forex', 'Forex')], max_length=10)),
                ('current_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EconomicCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=100)),
                ('importance', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=10)),
                ('actual', models.CharField(blank=True, max_length=50, null=True)),
                ('forecast', models.CharField(blank=True, max_length=50, null=True)),
                ('previous', models.CharField(blank=True, max_length=50, null=True)),
                ('event_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='order',
            name='amount',
        ),
        migrations.RemoveField(
            model_name='order',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='pricealert',
            name='price',
        ),
        migrations.RemoveField(
            model_name='pricealert',
            name='status',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='amount_btc',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='btc_balance',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='usd_balance',
        ),
        migrations.AddField(
            model_name='order',
            name='executed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='quantity',
            field=models.DecimalField(decimal_places=8, default=0, max_digits=20),
        ),
        migrations.AddField(
            model_name='order',
            name='stop_price',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='pricealert',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='pricealert',
            name='price_threshold',
            field=models.DecimalField(decimal_places=8, default=0, max_digits=20),
        ),
        migrations.AddField(
            model_name='transaction',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='fee',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=20),
        ),
        migrations.AddField(
            model_name='transaction',
            name='status',
            field=models.CharField(default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_email_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_phone_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='last_login_ip',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='phone_number',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='risk_profile',
            field=models.CharField(default='moderate', max_length=20),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='two_factor_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='verification_status',
            field=models.CharField(choices=[('unverified', 'Unverified'), ('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='unverified', max_length=20),
        ),
        migrations.AlterField(
            model_name='order',
            name='order_side',
            field=models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], default='buy', max_length=4),
        ),
        migrations.AlterField(
            model_name='order',
            name='order_type',
            field=models.CharField(choices=[('market', 'Market Order'), ('limit', 'Limit Order'), ('stop_loss', 'Stop Loss')], default='market', max_length=10),
        ),
        migrations.AlterField(
            model_name='order',
            name='price',
            field=models.DecimalField(decimal_places=8, default=0, max_digits=20),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('executed', 'Executed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=10),
        ),
        migrations.AlterField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile'),
        ),
        migrations.AlterField(
            model_name='pricealert',
            name='alert_type',
            field=models.CharField(choices=[('above', 'Price Above'), ('below', 'Price Below')], default='above', max_length=5),
        ),
        migrations.AlterField(
            model_name='pricealert',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=20),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile'),
        ),
        migrations.CreateModel(
            name='AIRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(max_length=10)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('reasoning', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.asset')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='asset',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='trading.asset'),
        ),
        migrations.AddField(
            model_name='pricealert',
            name='asset',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='trading.asset'),
        ),
        migrations.CreateModel(
            name='AssetMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_cap', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('volume_24h', models.DecimalField(decimal_places=2, max_digits=20)),
                ('high_24h', models.DecimalField(decimal_places=8, max_digits=20)),
                ('low_24h', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price_change_24h', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_change_7d', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_change_30d', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rsi_14', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('ma_50', models.DecimalField(decimal_places=8, max_digits=20, null=True)),
                ('ma_200', models.DecimalField(decimal_places=8, max_digits=20, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.asset')),
            ],
        ),
        migrations.CreateModel(
            name='KYCDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('id_card', 'ID Card'), ('drivers_license', "Driver's License"), ('utility_bill', 'Utility Bill')], max_length=20)),
                ('document_number', models.CharField(max_length=50)),
                ('document_file', models.FileField(upload_to='kyc_documents/')),
                ('is_verified', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='MarketNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('source', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('news_type', models.CharField(choices=[('general', 'General'), ('price_action', 'Price Action'), ('regulatory', 'Regulatory'), ('technical', 'Technical Analysis'), ('fundamental', 'Fundamental Analysis')], max_length=20)),
                ('impact_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=10)),
                ('sentiment_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('published_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_assets', models.ManyToManyField(to='trading.asset')),
            ],
        ),
        migrations.CreateModel(
            name='MarketSentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentiment_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('volume_24h', models.DecimalField(decimal_places=2, max_digits=20)),
                ('social_mentions', models.IntegerField(default=0)),
                ('news_sentiment', models.DecimalField(decimal_places=2, max_digits=5)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.asset')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('price_alert', 'Price Alert'), ('trade_execution', 'Trade Execution'), ('news', 'News Alert'), ('system', 'System Notification')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_value', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_profit_loss', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('average_buy_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('profit_loss', models.DecimalField(decimal_places=2, max_digits=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.asset')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='RiskMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volatility', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sharpe_ratio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('beta', models.DecimalField(decimal_places=2, max_digits=10)),
                ('alpha', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_drawdown', models.DecimalField(decimal_places=2, max_digits=10)),
                ('var_95', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='TradingBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('strategy_type', models.CharField(choices=[('trend_following', 'Trend Following'), ('mean_reversion', 'Mean Reversion'), ('arbitrage', 'Arbitrage')], max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('parameters', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TradingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('timeframe', models.CharField(choices=[('1m', '1 Minute'), ('5m', '5 Minutes'), ('15m', '15 Minutes'), ('1h', '1 Hour'), ('4h', '4 Hours'), ('1d', '1 Day')], max_length=3)),
                ('indicators', models.JSONField()),
                ('entry_conditions', models.JSONField()),
                ('exit_conditions', models.JSONField()),
                ('risk_per_trade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('take_profit', models.DecimalField(decimal_places=2, max_digits=5)),
                ('stop_loss', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='StrategyBacktest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('initial_balance', models.DecimalField(decimal_places=2, max_digits=20)),
                ('final_balance', models.DecimalField(decimal_places=2, max_digits=20)),
                ('total_trades', models.IntegerField()),
                ('winning_trades', models.IntegerField()),
                ('losing_trades', models.IntegerField()),
                ('profit_factor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_drawdown', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sharpe_ratio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('detailed_results', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.tradingstrategy')),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_preferences', models.JSONField(default=dict)),
                ('trading_preferences', models.JSONField(default=dict)),
                ('ui_preferences', models.JSONField(default=dict)),
                ('api_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('code_type', models.CharField(choices=[('email', 'Email Verification'), ('phone', 'Phone Verification'), ('phone_fallback', 'Phone Fallback'), ('2fa', 'Two-Factor Authentication')], max_length=20)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WatchList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assets', models.ManyToManyField(to='trading.asset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('cash_balance', models.DecimalField(decimal_places=2, max_digits=20)),
                ('invested_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('daily_profit_loss', models.DecimalField(decimal_places=2, max_digits=20)),
                ('daily_profit_loss_percentage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('snapshot_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.portfolio')),
            ],
            options={
                'unique_together': {('portfolio', 'snapshot_date')},
            },
        ),
    ]
